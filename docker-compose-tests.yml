version: '3.9'
services:
  redis_cache:
    build: redis_config
    hostname: redis
    ports:
      - 6379:6379
    volumes:
      - ./_redis_data_tests:/opt/redis/db
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - cinema_network

  elasticsearch:
    image: elasticsearch:7.17.9
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms700m -Xmx700m"
    ports:
      - 9200:9200
      - 9300:9300
    ulimits:
      memlock:
        soft: -1
        hard: -1
    hostname: elasticsearch
    volumes:
      - ./_es_data_tests:/usr/share/elasticsearch/data
    healthcheck:
      test: curl -s http://elasticsearch:9200 >/dev/null || exit 1
      interval: 30s
      timeout: 10s
      retries: 50
    networks:
      - cinema_network

  fastapi_service:
    build: fastapi-solution
    image: fastapi-image
    env_file:
      - .env
    ports:
      - 8000:8000
#    healthcheck:
#      test: curl -s -f http://localhost:8000/api/v1/status  >/dev/null || exit 1
#      interval: 10s
#      timeout: 5s
#      retries: 5
    depends_on:
      elasticsearch:
        condition: service_healthy
      redis_cache:
        condition: service_healthy
    networks:
      - cinema_network

  nginx_service:
    image: nginx:1.23
    hostname: nginx
    volumes:
      - ./nginx_config/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx_config/conf.d:/etc/nginx/conf.d:ro
    ports:
      - "80:80"
    restart: on-failure
    depends_on:
      fastapi_service:
        condition: service_started
#    healthcheck:
#      test: curl -s -f http://localhost:80/api/v1/  >/dev/null || exit 1
#      interval: 10s
#      timeout: 5s
#      retries: 10
    networks:
      - cinema_network

  tests:
    build: tests/functional
    volumes:
      - ./tests:/tests
    env_file:
      - .env
    depends_on:
      nginx_service:
        condition: service_started
      fastapi_service:
        condition: service_started
      elasticsearch:
        condition: service_healthy
      redis_cache:
        condition: service_healthy
    networks:
      - cinema_network

volumes:
  _es_data_tests:
  _redis_data_tests:
  tests:

networks:
  cinema_network:
    driver: bridge