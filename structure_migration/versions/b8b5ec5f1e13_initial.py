"""initial

Revision ID: b8b5ec5f1e13
Revises: 
Create Date: 2023-03-07 20:30:05.835244

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy import DDL
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'b8b5ec5f1e13'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    create_schema = DDL('''
        CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
        create schema content;
    ''')
    create_schema(target=None, bind=op.get_bind())

    op.create_table('film_work',
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('id', postgresql.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('creation_date', sa.DateTime(), nullable=True),
    sa.Column('file_path', sa.String(), nullable=True),
    sa.Column('rating', sa.Integer(), nullable=True),
    sa.Column('type', sa.Enum('movie', 'tv_show', name='MovieType'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='content'
    )
    op.create_table('genre',
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('id', postgresql.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='content'
    )
    op.create_table('person',
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('id', postgresql.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('full_name', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('full_name'),
    schema='content'
    )
    op.create_table('genre_film_work',
    sa.Column('id', postgresql.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('film_work_id', postgresql.UUID(), nullable=True),
    sa.Column('genre_id', postgresql.UUID(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['film_work_id'], ['content.film_work.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['genre_id'], ['content.genre.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    schema='content'
    )
    op.create_index('idxu_genre_film_work', 'genre_film_work', ['film_work_id', 'genre_id'], unique=True, schema='content')
    op.create_table('person_film_work',
    sa.Column('id', postgresql.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('film_work_id', postgresql.UUID(), nullable=True),
    sa.Column('person_id', postgresql.UUID(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('role', sa.Enum('actor', 'director', 'writer', name='RoleTypes'), nullable=True),
    sa.ForeignKeyConstraint(['film_work_id'], ['content.film_work.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['person_id'], ['content.person.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    schema='content'
    )
    op.create_index('idxu_person_filmwork', 'person_film_work', ['film_work_id', 'person_id', 'role'], unique=False, schema='content')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idxu_person_filmwork', table_name='person_film_work', schema='content')
    op.drop_table('person_film_work', schema='content')
    op.drop_index('idxu_genre_film_work', table_name='genre_film_work', schema='content')
    op.drop_table('genre_film_work', schema='content')
    op.drop_table('person', schema='content')
    op.drop_table('genre', schema='content')
    op.drop_table('film_work', schema='content')

    drop_schema = DDL('''
            CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
            drop schema content;
        ''')
    drop_schema(target=None, bind=op.get_bind())
    # ### end Alembic commands ###
