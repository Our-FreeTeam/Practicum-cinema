version: '3.9'
services:
  db:
    image: postgres:15.2-alpine
    hostname: db
    volumes:
      - ./_postgres_data:/var/lib/postgresql/data/
    restart: on-failure
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    healthcheck:
      test: [ "CMD", "pg_isready", "-d", "${DB_NAME}", "-U", "${DB_USER}"]
      interval: 3s
      timeout: 5s
      retries: 30
    deploy:
      resources:
        limits:
          memory: 1024M
    logging:
      driver: "fluentd"
      options:
        fluentd-address: "host.docker.internal:24224"
        tag: "postgres_cinema"
    networks:
      - cinema_network

  redis_cache:
    build: redis_config
    hostname: redis
    ports:
      - "6379:6379"
    volumes:
      - ./_redis_data:/opt/redis/db
    logging:
      driver: "fluentd"
      options:
        fluentd-address: "host.docker.internal:24224"
        tag: "redis_ec_cache"
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
    networks:
      - cinema_network

  elasticsearch:
    image: elasticsearch:7.17.9
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms900m -Xmx900m"
    ports:
      - "9200:9200"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    hostname: elasticsearch
    volumes:
      - ./_es_data:/usr/share/elasticsearch/data
    logging:
      driver: "fluentd"
      options:
        fluentd-address: "host.docker.internal:24224"
        tag: "es_cinema"
    healthcheck:
      test: curl -s http://elasticsearch:9200 >/dev/null || exit 1
      interval: 30s
      timeout: 10s
      retries: 50

    networks:
      - cinema_network

  etl_service_films:
    build: etl
    env_file:
      - .env
    environment:
      - UPLOADED_INDEX=films
    volumes:
      - ./db:/opt/app/db:ro
      - ./structure_migration:/opt/app/structure_migration:ro
    depends_on:
      db:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    logging:
      driver: "fluentd"
      options:
        fluentd-address: "host.docker.internal:24224"
        tag: "etl_movies"
    networks:
      - cinema_network

  etl_service_genres:
    build: etl
    env_file:
      - .env
    environment:
      - UPLOADED_INDEX=genres
    volumes:
      - ./db:/opt/app/db:ro
      - ./structure_migration:/opt/app/structure_migration:ro
    depends_on:
      db:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    logging:
      driver: "fluentd"
      options:
        fluentd-address: "host.docker.internal:24224"
        tag: "etl_genres"
    networks:
      - cinema_network

  etl_service_persons:
    build: etl
    env_file:
      - .env
    environment:
      - UPLOADED_INDEX=persons
    volumes:
      - ./db:/opt/app/db:ro
      - ./structure_migration:/opt/app/structure_migration:ro
    depends_on:
      db:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    logging:
      driver: "fluentd"
      options:
        fluentd-address: "host.docker.internal:24224"
        tag: "etl_persons"
    networks:
      - cinema_network

  fastapi_service:
    build: fastapi-solution
    image: fastapi-image
    env_file:
      - .env
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
      redis_cache:
        condition: service_healthy
    healthcheck:
      test: curl -s http://localhost:8000/api/v1/status >/dev/null || exit 1
      interval: 30s
      timeout: 10s
      retries: 50
    logging:
      driver: "fluentd"
      options:
        fluentd-address: "host.docker.internal:24224"
        tag: "fastapi_cinema_api"
    networks:
      - cinema_network

  nginx_service:
    image: nginx:1.23
    hostname: nginx
    volumes:
      - ./nginx_config/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx_config/conf.d:/etc/nginx/conf.d:ro
    ports:
      - "80:80"
    restart: on-failure
    depends_on:
      fastapi_service:
        condition: service_healthy
    healthcheck:
      test: curl -s http://localhost:80/api/v1/status >/dev/null || exit 1
      interval: 10s
      timeout: 5s
      retries: 10
    logging:
      driver: "fluentd"
      options:
        fluentd-address: "host.docker.internal:24224"
        tag: "nginx"
    networks:
      - cinema_network

  tests_auth:
    build: tests_auth/functional
    volumes:
      - ./tests_auth:/tests_auth
    env_file:
      - .env
    depends_on:
      nginx_service:
        condition: service_started
      fastapi_service:
        condition: service_started
      elasticsearch:
        condition: service_healthy
      redis_cache:
        condition: service_healthy
    networks:
      - cinema_network

  ugc_service:
    build: ugc_api
    hostname: ugc_service
    env_file:
      - .env
    ports:
      - "8005:8005"
    logging:
      driver: "fluentd"
      options:
        fluentd-address: "host.docker.internal:24224"
        tag: "ugc_service"
    networks:
      - cinema_network

  mailer_cron:
    build: mailercron_service
    env_file:
      - .env
    logging:
      driver: "fluentd"
      options:
        fluentd-address: "host.docker.internal:24224"
        tag: "Mailer Scheduler"
    networks:
      - cinema_network

  tests_ugc:
    build: tests_analytic/functional
    volumes:
      - ./tests_analytic:/tests_analytic
    env_file:
      - .env
    depends_on:
      ugc_service:
        condition: service_started
    networks:
      - cinema_network

volumes:
  _postgres_data:
  _es_data:
  _redis_data:
  tests_auth:


networks:
  cinema_network:
    driver: bridge